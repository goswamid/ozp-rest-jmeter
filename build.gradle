buildscript {
  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    }
  dependencies {
    classpath 'com.github.kulya:jmeter-gradle-plugin:1.3.4-2.11'
  }
}

import com.github.kulya.gradle.plugins.jmeter.JmeterRunTask
import com.github.kulya.gradle.plugins.jmeter.JmeterRunGuiTask

apply plugin: 'java'
apply plugin: 'jmeter'

repositories {
  mavenLocal()
  jcenter()
}

def propsFile = file 'jmeter.properties'
def apiResources = [
  'API',
  'Agency',
  'ApplicationLibrary',
  'Category',
  'ContactType',
  'Data',
  'Image',
  'Intent',
  'ListingActivity',
  'ListingComment',
  'ListingRelationships',
  'Listing_Create',
  'Listing_Update',
  'Listing_Invalid_IDs',
  'Listing_Parameters',
  'ListingWorkflow',
  'Metadata',
  'Notification',
  'Profile',
  'ProfileOrganizationStewards',
  'Scorecard',
  'Storefront',
  'Type'
]

apiResources.each { resource ->
  def testFile = file "test/${resource}.jmx"

  task "test$resource"(type: JmeterRunTask) {
    jmeterTestFiles = [testFile]
    jmeterPropertyFile = propsFile 
    jmeterUserProperties = ["hostname=localhost","context=marketplace","hostport=8443","protocol=https"]
    maxHeapSize = '512m'
    enableReports = true
    reportDir = file "$project.buildDir/jmeter-report"
    reportPostfix = '-report.html'
    remote = false
  }

  tasks.test.dependsOn tasks["test$resource"]

  task "edit$resource"(type: JmeterRunGuiTask) {
    jmeterEditFile = testFile
    jmeterPropertyFile = propsFile
    maxHeapSize = '512m'
  }
}

jmeterRun {
    jmeterTestFiles = apiResources.collect { resource ->
        file "test/${resource}.jmx"
    }

    jmeterPropertyFile = propsFile
}

jmeterEditor {
    jmeterPropertyFile = propsFile
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}

task list << {
  apiResources.each { resource ->
    println resource
  }
}